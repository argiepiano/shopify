<?php

/**
 * Implements hook_menu().
 */
function shopify_api_menu() {
  $items = array();
  $items['admin/config/services/shopify'] = array(
    'title' => 'Shopify',
    'description' => 'Configure the Shopify integration.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('shopify_api_admin_settings'),
    'access arguments' => array('administer shopify api'),
    'file' => 'shopify_api.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function shopify_api_permission() {
  $perms = array();
  $perms['administer shopify api'] = array(
    'title' => t('Administer Shopify Settings'),
  );
  return $perms;
}

/**
 * Implements hook_library_info().
 */
function shopify_api_library_info() {
  $libraries = array();
  $libraries['shopify'] = array(
    'name' => 'Shopify',
    'website' => 'https://github.com/cmcdonaldca/ohShopify.php',
    'version' => '1.0',
    'files' => array(
      'php' => array(
        'shopify.php',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_config_info().
 */
function shopify_api_config_info() {
  $prefixes['shopify_api.settings'] = array(
    'label' => t('Shopify settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Create a Shopify API client class.
 *
 * @return
 *   A ShopifyClient class if all connection settings are present, otherwise
 *   NULL.
 */
function shopify_api_client() {
  // Load the library.
  $loaded = include_once(backdrop_get_path('module', 'shopify') . '/library/shopify/shopify.php');

  if ($loaded) {
    // Mark what is required.
    $required = array('domain', 'token', 'secret', 'key');

    // Iterate the required items and fetch the data.
    foreach ($required as $key) {
      // If we cannot get a value, then we cannot get a client.
      if (!(${$key} = config_get('shopify_api.settings', "shopify_api_{$key}"))) {
        return NULL;
      }
    }

    // Create the client.
    return new ShopifyClient($domain, $token, $key, $secret);
  }
  else {
    // Library did not load correctly.
    return NULL;
  }
}
