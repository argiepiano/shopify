<?php
/**
 * @file
 * Install, update and uninstall functions for the shopify_api module.
 *
 */


/**
 * Implements hook_requirements().
 */
function shopify_api_requirements($phase) {
  backdrop_load('module', 'shopify_api');
  $requirements = array();

  // Runtime phase
  if ($phase == 'runtime') {
    // Load the libraries that we need
    $libraries = shopify_api_library_info();

    // Iterate each library to make sure they are present
    foreach ($libraries as $key => $library) {
      // Load the library
      $status = include_once(backdrop_get_path('module', 'shopify') . '/library/shopify/shopify.php');

      // Report the status
      $requirements[$key] = array(
        'title' => t('!name library', array('!name' => $library['name'])),
        'value' => $status?t('Installed (%version)', array('%version' => $library['version'])) : t('Missing'),
        'description' => !$status?t('The !name library is required for Shopify to work. !link it and add it to your libraries directory.', array('!name' => $library['name'], '!link' => l(t('Download'), $library['download url']))) : '',
        'severity' => $status?REQUIREMENT_OK : REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

/**
 * Migrate shopify_api variables to config.
 */
function shopify_api_update_1000() {
  $config = config('shopify_api.settings');
  $config->set('shopify_api_domain', update_variable_get('shopify_api_domain', ''));
  $config->set('shopify_api_token', update_variable_get('shopify_api_token', ''));
  $config->set('shopify_api_key', update_variable_get('shopify_api_key', ''));
  $config->set('shopify_api_secret', update_variable_get('shopify_api_secret', ''));
  $config->save();

  update_variable_del('shopify_api_domain');
  update_variable_del('shopify_api_token');
  update_variable_del('shopify_api_key');
  update_variable_del('shopify_api_secret');
}
